#include<iostream>
#include<string>
#include<vector>
using namespace std;

int total, getsu, day;
int prob[100001];

int toString(string str){
	int i, jaritsu=100;
	int ret=0;
	for(i=0; i<str.length(); ++i){
		if(str[i]!='.'){
			ret+=((int)(str[i]-'0')*jaritsu);
			jaritsu/=10;
		}
	}
	return ret;
}

void solve(){
	
	int i, maximum=0;
	prob[0]=0;
	int yeonsok=0, start, end;
	vector<pair<int, int>> v;
	for(i=0; i<=day; ++i){
		if(prob[i]!=0){
			if(yeonsok==0){		//처음 시작한거임 
				start = i;
			}
			yeonsok++;
		}
		else{
			if(yeonsok!=0){		//처음 시작한거임 
				end = i-1;
				v.push_back({start, end});
			}
			yeonsok=0;	
		}
	}
	if(prob[day]!=0){
		v.push_back({start, day});
	}
	/*
	cout<<endl;
	for(i=0; i<v.size(); ++i){
		cout<<v[i].first<<" "<<v[i].second<<endl;
	}
	cout<<endl;
	cout<<endl;
	*/
	int longest = 0;
	for(i=0; i<v.size(); ++i){
		start = v[i].first;
		end = v[i].second;
		longest = max(longest, end-start+1);
	}
	
	if(getsu==0){
		//////
	}
	else if(getsu==1){
		longest = max(longest, 1);
		for(i=0; i<v.size(); ++i){
			start = v[i].first;
			end = v[i].second;
			if(start!=1){
				longest = max(longest, end-start+2);
			}
			if(end!=day){
				longest = max(longest, end-start+2);
			}
			if(i>0){
				if(v[i-1].second+2==start){
					longest = max(longest, end-v[i-1].first+1);
				}	
			}
			if(i<v.size()-1){
				if(v[i+1].first-2==end){
					longest = max(longest, v[i+1].second-start+1);
				}
			}
			//longest = max(longest, end-start+1);
		}
	}
	else{
		if(day==1) longest = max(longest, 1);
		else longest = max(longest, 2);
		for(i=0; i<v.size(); ++i){
			start = v[i].first;
			end = v[i].second;
			if(start>2){
				if(i==0){
					longest = max(longest, end-start+3);	
				}
				else{
					if(i>0){
						if(v[i-1].second+3<start){
							longest = max(longest, end-start+3);	
						}
						else if(v[i-1].second+3==start){
							longest = max(longest, end-v[i-1].first+1);	
						}
					}
				}
			}
			if(end<day-1){
				if(i==v.size()-1){
					longest = max(longest, end-start+3);	
				}
				else{
					if(i<v.size()-1){
						if(v[i+1].first-3>end){
							longest = max(longest, end-start+3);	
						}
						else if(v[i+1].first-3==end){
							longest = max(longest, v[i+1].second-start+1);
						}
					}
				}
			}
			//longest = max(longest, end-start+1);
		}
		
		for(i=0; i<v.size(); ++i){
			start = v[i].first;
			end = v[i].second;
			if(i>0){
				if(v[i-1].second+2==start){
					if(v[i-1].first!=1||end!=day){
						longest = max(longest, end-v[i-1].first+2);
					}
					else{
						longest = max(longest, end-v[i-1].first+1);
					}
				}
			}
			if(i<v.size()-1){
				if(v[i+1].first-2==end){
					if(start!=1||v[i+1].second!=day){
						longest = max(longest, v[i+1].second-start+2);
					}
					else{
						longest = max(longest, v[i+1].second-start+1);
					}
				}
			}
			//longest = max(longest, end-start+1);
		}
		for(i=0; i<v.size(); ++i){
			start = v[i].first;
			end = v[i].second;
			if(i>0&&i<v.size()-1){
				if(v[i-1].second+2==start&&v[i+1].first-2==end){
					longest = max(longest, v[i+1].second-v[i-1].first+1);
				}
			}
			//longest = max(longest, end-start+1);
		}
		
	}
	
	
	
	/*
	for(i=0; i<v.size(); ++i){
		cout<<v[i].first<<" "<<v[i].second<<endl;
	}
	*/
	for(i=1; i<=day; ++i){
		maximum = max(maximum, prob[i]);
	}
	cout<<longest<<"\n"<<maximum;
}

int main(void)
{
	string t;
	cin>>t;
	total = toString(t);
	getsu = total/99;
	if(getsu>2) getsu=2;
	int i;
	cin>>day;
	for(i=1; i<=day; ++i){
		cin>>prob[i];
	}
	solve();
	return 0;
}
