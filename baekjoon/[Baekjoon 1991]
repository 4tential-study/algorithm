#include<iostream>
#include<queue>
#define fastio ios::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
using namespace std;

struct node {
	char data;
	node* left;
	node* right;
};

node alpha[26];
//node* tree[26];
int num;

void addNode(char p, char c1, char c2) {
	int index = (int)(p - 'A');
	alpha[index].data = p;
	alpha[index].left = nullptr;
	alpha[index].right = nullptr;
	if (c1 != '.') {
		int c1Index = (int)(c1 - 'A');
		alpha[index].left = &alpha[c1Index];
	}
	if (c2 != '.') {
		int c2Index = (int)(c2 - 'A');
		alpha[index].right = &alpha[c2Index];
	}
	
}

void jeon(node* now) {
	cout << now->data;
	if(now->left!=nullptr) jeon(now->left);
	if(now->right!=nullptr) jeon(now->right);
}
void joong(node* now) {
	if (now->left != nullptr) joong(now->left);
	cout << now->data;
	if (now->right != nullptr) joong(now->right);
}
void hoo(node* now) {
	if (now->left != nullptr) hoo(now->left);
	if (now->right != nullptr) hoo(now->right);
	cout << now->data;
}

int main(void)
{
	//fastio;
	cin >> num;
	char a, b, c;
	for (int i = 0; i < num; ++i) {
		cin >> a >> b >> c;
		addNode(a, b, c);
	}
	jeon(alpha);
	cout << "\n";
	joong(alpha);
	cout << "\n";
	hoo(alpha);
	return 0;
}
