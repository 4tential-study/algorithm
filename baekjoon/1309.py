#1309. 동물원 (백준, 실버 1)
#해당 문제는 그림을 그려서 생각해보면 좋다.
'''
쉽게 생각해보자.
n=1일 때, 경우의 수는 00 / 01 / 10으로 세 가지이다.
n=2일 때, 경우의 수는 00, 00 / 00, 01 / 00. 10 / 01, 00 / 01, 10 / 10, 00 / 10. 01 으로 일곱 가지이다.
n=3일 때, 경우의 수는 00, 00, 00 / 00, 00, 01 / 00, 00, 10 / 00, 01, 00 / 00, 01, 10 / 00. 10, 00 / 00, 10, 01 / 01, 00, 00 / 01, 00, 10 / 01, 00, 01 / 01, 10, 00 / 01, 10, 01/ 10, 00, 00 / 10, 00, 01 / 10, 00, 10 / 10. 01, 00 / 10, 01, 10 으로 열일곱 가지이다.
우리는 이 연속적인 수로부터 규칙을 찾을 수 있다.
n=1일 떄, 00 / 01 / 10에서 모두 한 줄씩 아래에 추가되어 n=2가 되는데, 이때 세 가지 모두 00을 아래에 갖는 경우가 있다.
또한, 00의 경우에만 특별히 00 아래에 00, 01, 10을 모두 가질 수 있어 총 세 가지 경우가 파생된다.
그 외에는 00 혹은 10 / 01 중 하나만 가져 총 두 가지 경우가 파생된다.
이를 잘 생각해보면, n=1일 때의 모든 경우의 수*3 개 만큼의 경우의 수가 n=3에서 파생될 수 있다. (n=1일 때의 모든 경우의 수에 대해 n=2에서 각각 00인 맨 밑줄이 추가될 것이므로)
그 외(즉, n=2의 모든 경우의 수-n=1의 모든 경우의 수)에는 모두 아래에 두 가지 경우의 수가 파생될 수 있다.
이를 식으로 나타내면 다음과 같다.
'''
n=int(input())
dp=[0]*(n+1)
dp[1]=3
if n!=1:
    dp[2]=7
    for i in range(3,n+1):
        dp[i]=((dp[i-1]-dp[i-2])*2+dp[i-2]*3)%9901
print(dp[n])