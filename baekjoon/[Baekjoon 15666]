import java.io.*;
import java.util.*;

public class Main {

	static int num, getsu;
	static BufferedWriter bw;
	static int[] count = new int[10001];
	static List<Integer> l = new ArrayList<>();
	static List<Integer> arr = new ArrayList<>();
	
	public static void brute(int prevIndex) throws IOException {
		if(l.size()==getsu) {
			for(int i=0; i<l.size(); ++i) {
				bw.write(String.valueOf(l.get(i))+" ");
			}
			bw.write("\n");
			return;
		}
		int index = prevIndex;
		for(int i=prevIndex; i<arr.size(); ++i) {
			l.add(arr.get(i));
			brute(i);
			l.remove(l.size()-1);
		}
	}
	
	public static void solve() throws IOException {
		for(int i=0; i<=10000; ++i) {
			if(count[i]>0) arr.add(i);
		}
		int yeejeon = -1;
		for(int i=0; i<arr.size(); ++i) {
			l.add(arr.get(i));
			brute(i);
			l.remove(l.size()-1);
		}
	}
	
	public static void main(String[] args) throws IOException{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		bw = new BufferedWriter(new OutputStreamWriter(System.out));
		
		StringTokenizer st = new StringTokenizer(br.readLine());
		num = Integer.parseInt(st.nextToken());
		getsu = Integer.parseInt(st.nextToken());
		st = new StringTokenizer(br.readLine());
		int now;
		for(int i=0; i<num; ++i) {
			now = Integer.parseInt(st.nextToken());
			count[now]++;
		}
		solve();
		bw.flush();
	}

}
