#include<stdio.h>
int alpha[26];
int alphaCount[26][10001];
int panstar1(int getsu){
	int i;
	for(i=0; i<26; ++i){
		if(alpha[i]==getsu) return i;
	}
	return -1;
}
int panstar2(int getsu){
	int i;
	for(i=0; i<26; ++i){
		if(alpha[i]<=getsu) return 0;
	}
	return 1;
}
void solve(char str[], int getsu){
	int i, k,l=0,r=0;
	for(i=0; i<26; ++i){
		alpha[i] = 0;
		for(k=0; k<=10000; ++k){
			alphaCount[i][k] = -1;
		}
	}
	int origin,index;
	
	for(i=0; str[i]!='\0'; ++i){
		index = (int)(str[i]-'a');	
		origin = alpha[index];
		alphaCount[index][origin] = i;
		alpha[index]++;
	}
	/*
	for(i=0; i<26; ++i){
		printf("%c : ", (char)(i+'a'));
		for(k=0; alphaCount[i][k]!=-1; ++k){
			printf("%d ", alphaCount[i][k]);
		}
		printf("\n");
	}
	*/
	int now, next, len;
	int dap1 = 2100000000, dap2 = -1;
	for(i=0; i<26; ++i){
		for(k=0; alphaCount[i][k]!=-1&&k<=10000; ++k){
			now = alphaCount[i][k];
			if(k+getsu-1<=10000){
				if(alphaCount[i][k+getsu-1]!=-1){
					next = alphaCount[i][k+getsu-1];
					len = next-now+1;
					if(dap1>len) dap1 = len;
					if(dap2<len) dap2 = len;
				}
			}	
		}
	}
	if(dap1==2100000000){
		printf("%d\n", -1);
		return;
	}
	printf("%d %d\n", dap1, dap2);
}

int main(void)
{
	int testcase;
	scanf("%d", &testcase);
	int t, getsu;
	char str[10001];
	for(t=0; t<testcase; ++t){
		scanf("%s", str);
		//printf("%s\n", str);
		scanf("%d", &getsu);
		solve(str, getsu);
	}
	return 0;
}
